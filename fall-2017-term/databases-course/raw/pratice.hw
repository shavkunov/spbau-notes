# Практос. Оптимизируем оптимизации оптимизатора

Преждевременная оптимизация -- корень всех зол.
Код должен быть понятным и поддерживаем, прежде всего. Правила написания кода применимы здесь.

Пример кода, который понятен, но по производительности так себе
(30 - 36 строки)
по времени выполняется 87ms (\timing в postgres)

Давайте оптимизировать.
С запросом наверное ничего не сделать -- он написан как и должен быть написан.
Индексы нам помогут. Какой бы нам сделать?
CREATE INDEX idx1 on Spacecraft(capacity)

Чтобы посмотреть, как Postgres на самом деле выполнил запрос то пишем перед запросом слово EXPLAIN
Получаем простыню операций, которые мы обсуждали.
Postgres пишет стоимость в абстрактных попугаях которые как-то коррелируют с I/O.
Но чего тут нет? Это отсутствие Index. Использование индекса неэффективно, потому что размер таблиц очень маленький(13 кораблей, 100 планет).
Но пошаманим и сделав индекс на Flight(spacecraft_id) и вроде он начнет его использовать.

Внезапно помог индекс Flight(booking_id).
После EXPLAIN можно написать ANALYZE -- тогда в стоимости напишется реальное время работы
Во время EXPLAIN запрос НЕ выполняется
с припиской ANALYZE -- выполнится

Не нужно делать внутренний SELECT, который как-то зависит от внешних атрибутов:

SELECT 
	T,
	(SELECT ... WHERE T = ...)
WHERE...


