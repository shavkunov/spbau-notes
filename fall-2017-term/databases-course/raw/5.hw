# Лекция 5

Повторение. Нормальная форма Бойса-Кодда(НФ БК)
Определение. Для любой нетривиальной неприводимой слева ФЗ детерминантом является потенциальный ключ.

Если в R один потенциальный ключ, то НФ БК просто совпадает с III НФ.

Пример 1.
Если в отношении несколько ключей. Например: космический корабль.
S(имя), S\#(номер), BirthYear, ServiceLife
имя + номер определяют атрибуты корабля. Тут имеем НФ БК = III НФ.

Пример 2.
S, C, D, P

\digraph[scale=0.5]{1}{
rankdir=LR;
SD -> P
CD -> P
SD <-> CD
}

Вернемся к отношению с разминки:

\digraph[scale=0.5]{2}{
rankdir=LR;
a [ label="S\#D" ]
CD -> P
SD -> P
S -> P
CD -> SD
a -> SD
a -> CD
}

Детерминантом является атрибут, который не является ключом. Поэтому НФ БК не подходит.

Другой пример. 

\digraph[scale=0.5]{3}{
rankdir=LR;
SD -> C
C -> S
}

$C --> S$: Капитан летает на одном корабле.
$SD --> C$: для полета корабля в какую-то дату определен один капитан.
Может ли на корабле лететь другой капитан? Да, но в другую дату.
Находится ли оно в НФ БК? Ключи: SD, CD. Зависимость $C --> S$ мешает, поэтому не НФ БК.
Проведем декомпозицию.
CS, CD
По теореме Хита это декомпзиция без потерь. Все ли норм? Пропадает зависимость $SD --> C$. Печалька, потому что до НФ БК мы можем довести, но не всегда хотим, потому что по пути можем потерять нужные зависимости. Но утверждается, что такие случаи достаточно редки.

Пример. 
S, BY, SL, ...(+10 атрибутов, завис. от названия корабля)

При декомпозиции возникает непреодолимое желание разбить на 10 таблиц вида:
S, BY; S, SL ...

С точки зрения денормализация(обратный процесс) дела обстоят хуже. Пользователь хочет все собранное воедино.
S, SL, D, P, Хар-ки, Dist

Нужно выполнить n - 1 соединение, чтобы собрать n атрибутов. А соединение это самая дорогая операция в БД.

## Ссылочная целостность. Внешние ключи

Напоминание теоремы Хита. $A, B, C и A --> B => AB, AC$ - декомпозиция без потерь. В отношении AB, А -- ключ. И $ABC = AB \bowtie AC$
Но данные разбитые по разным таблицам должны быть как-то согласованы с друг другом. Если мы хотим добавить новый факт, то нужно записать одно и то же в обе таблицы и не ошибится. Т.е. за этим нужно ещё следить.

## Внешний ключ(Foreign Key)
Определение. Отношения R и S. K - ключ для R, $K \subset (R)$
$FK \subset (S)$ -- внешний ключ, ссылающийся на K.
Если K = FK (равны имена, типы) и в любых экземплярах R и S $\Pi_{FK}(S) \subseteq \Pi_K(R)$

## Основные предназначения связи между сущностями

Сущность-связь(Entity-Relationship)
Многие ко многим: N:M. Если рассмотреть множество объектов в этой ассоциации, то мы допускаем связь между любой парой.
Один к многим: 1:N. Если зафиксировать объект(капитан), то для него много полетов могут вступить с ним в ассоциацию.
Один к одному. 1:1. Взаимно-однозначное соответствие между объектами. Но надо задаваться всегда вопросом: а не один ли и тот же это объект?

Пример. Капитан:Полеты. Это 1:N. Стандартно это делается через внешний ключ:

Commander(Id Primary Key) $ <-- $ Flight($commander_{id}$ Foreign Key)